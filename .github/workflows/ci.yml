name: CI Pipeline

on:
  push:
    branches:
      - develop
      - internal
      - uat
      - main
  pull_request:
    branches:
      - develop
      - internal
      - uat
      - main

jobs:
  code-check:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' # Run only on develop branch

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run tests
        run: yarn test

      - name: Check formatting with Prettier
        run: yarn prettier:check

  ci-run:
    runs-on: ubuntu-latest
    needs: code-check
    if: github.ref != 'refs/heads/develop' # Run on all branches except develop

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run tests
        run: yarn test

      # Step to set environment variables
      - name: Set environment variables
        id: set-env
        run: |
          echo "PROJECT_NAME=tic-tac-toe-api" >> $GITHUB_ENV
          echo "BRANCH_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV
          echo "IMAGE_NAME=${{ github.repository }}-${GITHUB_REF##*/}" >> $GITHUB_ENV
          echo "COMMIT_ID=${GITHUB_SHA}" >> $GITHUB_ENV

      # Step to create version.txt file in the public directory if it exists
      - name: Create version.txt with commit ID in public directory
        run: |
          if [ -d "public" ]; then
            echo "${COMMIT_ID}" > public/version.txt
          else
            echo "public directory does not exist, skipping version.txt creation."
          fi

      # Step to build Docker image
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest,${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.COMMIT_ID }}

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image to DockerHub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.COMMIT_ID }}
